name: Publish Docker
on: [push, repository_dispatch]
jobs:
  minify:
    name: Minify images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Download and use webp converter
        run: |
          wget https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.1.0-rc2-linux-x86-64.tar.gz
          mkdir webp
          tar -xvzf libwebp-1.1.0-rc2-linux-x86-64.tar.gz -C webp
          for file in website/images/projects/*; do webp/libwebp-1.1.0-rc2-linux-x86-64/bin/cwebp -q 60 "$file" -o "${file%.*}.webp"; done
          rm -rf website/images/projects/*.png
          rm -rf website/templates/
      - name: Setup node js
        uses: actions/setup-node@v1
        with:
          node-version: 13
      - name: Install uglifyjs
        run: npm install uglify-es -g
      - name: Minify js-scripts
        run: |
          uglifyjs website/js/dotsBackground.js --compress --mangle --output website/js/dotsBackground.js
      - name: Install cssnano and PostCSS
        run: |
          npm install cssnano --save-dev
          npm install postcss --global
          npm install postcss-cli --global
      - name: Minify css
        run: |
          postcss website/style/general.css -r true
          postcss website/style/navBar.css -r true
          postcss website/style/blog.css -r true
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: website
          path: website/

  build:
    runs-on: ubuntu-latest
    needs: minify
    if: contains(github.ref, 'master')
    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v1
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: lol3r/personal_site # list of Docker images to use as base name for tags
          tag-sha: true # add git short SHA as Docker tag
          tag-latest: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.docker_meta.outputs.tags }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: contains(github.ref, 'master')
    steps:
      - uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Deploy to Cluster
        uses: steebchen/kubectl@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: set image deployment/personal personal=lol3r/personal_site:sha-${{ steps.vars.outputs.sha_short }}

  postdeploy:
    runs-on: ubuntu-latest
    needs: deploy
    if: contains(github.ref, 'master')
    steps:
      - uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - uses: frankie567/grafana-annotation-action@v1.0.2
        with:
          apiHost: https://grafana.lol3r.net
          apiToken: ${{ secrets.GRAFANA_API_TOKEN }}
          text: Deployed service 'personal site' <a href="https://github.com/Lol3rrr/personalWebsite/commit/${{ github.sha }}" target="_blank">Git (${{ steps.vars.outputs.sha_short }}) </a>
          tags: deployment,tier:frontend
